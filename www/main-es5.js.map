{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/grlist/grlist.component.ts","webpack:///src/app/login/grlist/grlist.component.html","webpack:///src/app/login/guard/authguard.guard.ts","webpack:///src/app/login/home/home.component.ts","webpack:///src/app/login/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/my-service.service.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","document","addEventListener","alert","device","platform","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GrlistComponent","router","route","items","params","subscribe","res","listname","list","localStorage","getItem","console","log","JSON","parse","listData","name","quantity","val","push","controls","reset","i","splice","bookmarks","setItem","stringify","removeItem","navigate","OnClickLogout","addItem","OnClickFinish","AuthguardGuard","next","state","providedIn","HomeComponent","service","tables","listArray","user","window","listItem","username","data","details","pswd","myData","lname","ngOnInit","LoginComponent","formDtls","email","required","pattern","password","minLength","maxLength","authlogin","msg","OnClickSubmit","OnClickRegister","MyServiceService","RegisterComponent","cnfpassword","register","OnClickLogin","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './login/home/home.component';\nimport { AuthguardGuard } from './login/guard/authguard.guard';\nimport { GrlistComponent } from './login/grlist/grlist.component';\n\nconst routes: Routes = [\n  {path: '', \n   component: LoginComponent},\n  {path:'register',\n   component: RegisterComponent},\n  {path: 'home/:user',\n   component: HomeComponent,\n   canActivate: [AuthguardGuard]},\n  {path:'grlist/:listname',\n   component: GrlistComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component,OnInit } from '@angular/core';\ndeclare var device;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'register';\n  ngOnInit() {\n    document.addEventListener(\"deviceready\", function() {\n    alert(device.platform);\n    }, false);\n    }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './login/home/home.component';\nimport { GrlistComponent } from './login/grlist/grlist.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    GrlistComponent\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-grlist',\n  templateUrl: './grlist.component.html',\n  styleUrls: ['./grlist.component.scss']\n})\nexport class GrlistComponent implements OnInit {\n\n  listData;\n  items=[];\n  listname:string;\n  constructor(private router:Router,private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(res => this.listname=res.listname); \n    var list = localStorage.getItem(this.listname);\n    console.log(list);\n    if(list!=null){\n      this.items=JSON.parse(list);\n    }    \n    console.log(this.items);\n    this.listData = new FormGroup({\n      name: new FormControl(),\n      quantity: new FormControl()\n   });\n  }\n  addItem(name,quantity){\n    console.log(\"Inside method addItem of grlist\" + name + quantity);\n    if(name && quantity){\n      console.log(\"Inside if condition\");\n      let val=this.listname\n      this.items.push({name,quantity,val});\n      console.log(this.items + \" listname :  \" +this.listname);\n      console.log(name + quantity);\n      this.listData.controls['name'].reset();\n      this.listData.controls['quantity'].reset();\n    }\n  }\n  deleteItem(i){\n    console.log(\"Inside method of deleteItem of grlist\");\n    this.items.splice(i,1);\n    var bookmarks = JSON.parse(localStorage.getItem(this.listname))\n    bookmarks.splice(i, 1)\n    console.log(\"local data\"+ i + bookmarks);\n    localStorage.setItem(this.listname, JSON.stringify(bookmarks));\n  }\n  OnClickFinish(){\n    console.log(\"Inside method OnClickFinish of grlist\");\n    localStorage.setItem(this.listname,JSON.stringify(this.items));\n    console.log(\"finish list:  \" +this.items);\n    this.listData.reset();\n  }\n  OnClickLogout(){\n    localStorage.removeItem(\"currentUser\");\n    console.log(\"hello logout\");\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"container-fluid ui\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"logout\">\n                <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"OnClickLogout()\">LogOut</button>\n            </div>\n            <div class=\"listUi\">\n                <span class=\"header\"><b>{{listname}}</b></span>\n                <button class=\"btn headbtn header\" data-toggle=\"modal\" data-target=\"#ModalForm\"> + </button>\n            </div>\n            <table class=\"data\">\n                <tr *ngFor=\"let item of items;let i=index\">\n                    <td class=\"col\">{{item.name}}</td>\n                    <td class=\"col\">{{item.quantity}}</td>\n                    <td class=\"col\">\n                        <button type=\"button\" class=\"close cls\" (click)=\"deleteItem(i)\" data-dismiss=\"modal\"\n                            aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </td>\n                </tr>\n            </table>\n            <!-- Modal pop up starts-->\n            <div id=\"ModalForm\" class=\"modal fade modelui\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-body\">\n                            <form [formGroup]=\"listData\" (ngSubmit)=\"addItem(listData.value.name,listData.value.quantity)\">\n                                <div class=\"m-5 dataUi\">\n                                    <p>{{listname}}</p>\n                                    <div class=\"listItem\">\n                                        <input type=\"text\" class=\"rounded\" formControlName=\"name\" name=\"name\"\n                                            placeholder=\"Item Name\">\n                                    </div>\n                                    <div class=\"listItem\">\n                                        <input type=\"text\" class=\"rounded\" formControlName=\"quantity\" name=\"quantity\"\n                                            placeholder=\"Item Quantity\">\n                                    </div>\n                                    <div class=\"listItem\">\n                                        <button type=\"submit\" class=\"btn btn-block btnd\">Add Item</button>\n                                    </div>\n                                    <div class=\"listItem\">\n                                        <button type=\"submit\" class=\"btn btn-block btnd mt-2\" (click)=\"OnClickFinish()\"\n                                            data-dismiss=\"modal\" aria-label=\"Close\">\n                                           Finish</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- Modal pop up ends -->\n        </div>\n    </div>\n</div>\n\n            ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate {\n  constructor(private router:Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      console.log(\"hello this is guard\");\n      if(localStorage.getItem(\"currentUser\")!=null && localStorage.getItem(\"currentUser\")!=''){\n        return true;\n      }else{\n        console.log(\"login failed\");\n        this.router.navigate(['']);\n        return false;\n      }\n      return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MyServiceService } from 'src/app/my-service.service';\nimport { RouterModule } from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router:Router,private service:MyServiceService,private route:ActivatedRoute) { }\n  listData;\n  items=[];\n  tables=[];\n  lname;\n  user;\n  listArray=[];\n  myData;\n  ngOnInit(): void {\n    console.log(\"Inside ngOnInit() method\");\n    this.listData=new FormGroup({\n      name:new FormControl(''),\n      quantity:new FormControl(''),\n      listname:new FormControl('')\n    })\n    this.route.params.subscribe(res => this.user=res.user); \n    var list=window.localStorage.getItem(this.user);\n    var listItem=JSON.parse(list);\n    this.items=listItem.name;\n    console.log(this.items);\n  }\n  OnClickLogout(){\n    window.localStorage.removeItem(\"currentUser\");\n    this.router.navigate(['']);\n  }\n  addNewList(){\n    console.log(\"Inside the method addNewList\");\n    this.router.navigate(['grlist']);\n  }\n  addItem(listname){\n    console.log(\"Inside method addItem- \"+listname);\n    var username =this.user;\n    var data = JSON.parse(window.localStorage.getItem(this.user));\n    if(data.name!=null){\n      for(let i of data.name){\n        this.listArray.push(i);\n      }\n    }\n    this.listArray.push(listname);\n    console.log(this.listArray);\n    if(listname){\n      var details = {\n        user: username,\n        pswd: data.pswd,\n        name: this.listArray\n      };\n      this.myData = JSON.stringify(details);\n      this.lname=listname;\n      this.listData.controls['listname'].reset();\n    }\n  }\n  deleteItem(i){\n    console.log(\"Inside method of deleteItem\");\n    this.items.splice(i,1);\n    var bookmarks = JSON.parse(window.localStorage.getItem(this.user))\n    bookmarks.name.splice(i, 1)\n    console.log(\"local data\"+ i + bookmarks.name);\n    window.localStorage.setItem(this.user, JSON.stringify(bookmarks));\n  }\n  OnClickFinish(){\n    console.log(\"Inside method OnClickFinish\");\n    localStorage.setItem(this.user, this.myData);\n    this.ngOnInit();\n    this.listData.reset();\n  }\n  onClickList(listname){\n    console.log(\"Inside the method OnClickList\");\n    this.router.navigate(['/grlist',listname]);\n  }\n}\n","<div class=\"container-fluid ui\">\n    <div class=\"row listrow\">\n        <div class=\"col\">\n            <div class=\"logout\">\n                <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"OnClickLogout()\">LogOut</button>\n            </div>\n            <div class=\"m-5\">\n                <p>Grocery List Manager</p>\n                <button class=\"btn btnd btn-block\" data-toggle=\"modal\" data-target=\"#ModalForm\">New List</button>\n            </div>\n            <table class=\"data\">\n                <tr *ngFor=\"let item of items;let i=index\">\n                    <td class=\"col\"><button type=\"button\" (click)=\"onClickList(item)\" class=\"btn btn-block\">{{item}}</button></td>\n                    <!-- <td class=\"col\"><a (click)=\"onClickList()\">{{item.listname}}</a></td> -->\n                    <td class=\"col\">\n                        <button type=\"button\" class=\"close cls\" (click)=\"deleteItem(i)\" data-dismiss=\"modal\"\n                            aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </td>\n                </tr>\n            </table>\n            <!-- Modal pop up starts-->\n            <div id=\"ModalForm\" class=\"modal fade modelui\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-body\">\n                            <form [formGroup]=\"listData\" (ngSubmit)=\"addItem(listData.value.listname)\">\n                                <div class=\"m-5 listUi\">\n                                    <p>Grocery List</p>\n                                    <div class=\"listItem\">\n                                        <input type=\"text\" class=\"rounded\" formControlName=\"listname\" name=\"listname\"\n                                            placeholder=\"List Name\">\n                                    </div>\n                                    <div class=\"listItem\">\n                                        <button type=\"submit\" class=\"btn btn-block btnd\">Add List</button>\n                                    </div>\n                                    <div class=\"listItem\">\n                                        <button type=\"submit\" class=\"btn btn-block btnd mt-2\" (click)=\"OnClickFinish()\"\n                                            data-dismiss=\"modal\" aria-label=\"Close\">\n                                           Finish</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- Modal pop up ends -->\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MyServiceService } from '../my-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  formDtls;\n  msg;\n  constructor(private router:Router,private service:MyServiceService) { }\n\n  ngOnInit(): void {\n    this.formDtls=new FormGroup({\n      email:new FormControl(\"\",[Validators.required,\n      Validators.pattern(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)]),\n      password:new FormControl(\"\",[Validators.required,\n      Validators.minLength(8),\n      Validators.maxLength(16)]) \n    })\n  }\n  OnClickSubmit(data){\n  console.log(\"username:\"+ data.email + \" Password:\"+ data.password);\n  var user = this.service.authlogin(data.email,data.password);\n  console.log(user);\n  if(user){\n    this.router.navigate(['/home',data.email]);\n  }else{\n    this.msg=\"Invalid Username Or Password\";\n  }\n  }\n  OnClickRegister(){\n    console.log(\"Inside method OnClickRegister()\");\n    this.router.navigate(['/register']);\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-9 col-lg-4\"></div>\n        <div class=\"col-sm-9 col-sm-offset-1 col-lg-4\">\n            <form [formGroup]=\"formDtls\" (ngSubmit)=\"OnClickSubmit(formDtls.value)\">\n                <!-- <img src=\"assets\\Images\\i.jpg\" alt=\"avatar\" class=\"rounded-circle img-responsive ui\"> -->\n                <h1 class=\"mt-3\">Groceries</h1>\n                <div class=\"formData\">\n                    <h4 class=\"mb-4 ml-3\">Login to Your Account</h4>\n                    <div class=\"form-group input-group\">\n                        <div class=\"input-group-prepend pre\">\n                            <span class=\"input-class-text\"><i class=\"fa fa-user fa-lg\"></i></span>\n                        </div>\n                        <input type=\"email\" class=\"form-control\" placeholder=\"Username\" formControlName=\"email\"\n                            name=\"email\">\n                    </div>\n                    <div class=\"form-group input-group\">\n                        <div class=\"input-group-prepend pre\">\n                            <span class=\"input-class-text\"><i class=\"fa fa-key fa-lg\"></i></span>\n                        </div>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\n                            name=\"password\">\n                    </div>\n                    <span class=\"center\">{{msg}}</span><br>\n                    <button type=\"submit\" class=\"btn btn-block mb-3 btnd\">Login</button>\n                    <p>OR</p>\n                    <button type=\"button\" class=\"btn btn-block btnd\" (click)=OnClickRegister()>Register Here</button>\n                </div>\n            </form>\n        </div>\n        <div class=\"col-sm-9 col-lg-4\"></div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyServiceService {\n\n  constructor() { }\n\n  authlogin(username:string,password:string){\n    console.log(\"Inside authlogin method of myService\");\n    var pswd = JSON.parse(window.localStorage.getItem(username));\n    console.log(\" Localstorage password : \"+ pswd.user +pswd.name+pswd.pswd);\n    if(pswd.pswd==password)\n    {\n      localStorage.setItem(\"currentUser\",username);\n      return true;\n    }\n    else\n    return false;  \n  }\n  register(username:string,password:string){\n    console.log(\"Inside method register()\");\n    var details = {\n      user: username,\n      pswd: password,\n      name: ''\n    };\n    var myData = JSON.stringify(details);\n    localStorage.setItem(username, myData);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MyServiceService } from '../my-service.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  formDtls;\n  constructor(private router:Router,private service:MyServiceService) { }\n\n  ngOnInit(): void {\n    this.formDtls=new FormGroup({\n      email:new FormControl(\"\",[Validators.required,\n      Validators.pattern(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)]),\n      password:new FormControl(\"\",[Validators.required,\n      Validators.minLength(8),\n      Validators.maxLength(16)]),\n      cnfpassword:new FormControl(\"\",[Validators.required,\n      Validators.minLength(8),\n      Validators.maxLength(16)])\n    })\n  }\n  OnClickSubmit(data){\n    console.log(\"username:\"+ data.email + \" Password:\"+ data.password);\n    var user = this.service.register(data.email,data.password);\n    this.formDtls.reset();\n  }\n  OnClickLogin(){\n    console.log(\"Inside method OnClickLogin()\");\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-9 col-lg-4\"></div>\n        <div class=\"col-sm-9 col-sm-offset-1 col-lg-4\">\n            <form [formGroup]=\"formDtls\" (ngSubmit)=\"OnClickSubmit(formDtls.value)\">\n                <!-- <img src=\"assets\\Images\\i.jpg\" alt=\"avatar\" class=\"rounded-circle img-responsive ui\"> -->\n                <h1 class=\"mt-3\">Groceries</h1>\n                <div class=\"formData\">\n                    <h4 class=\"mb-4 ml-3\">Register to Your Account</h4>\n                    <div class=\"form-group input-group\">\n                        <div class=\"input-group-prepend pre\">\n                            <span class=\"input-class-text\"><i class=\"fa fa-user fa-lg\"></i></span>\n                        </div>\n                        <input type=\"email\" class=\"form-control\" placeholder=\"Username\" formControlName=\"email\"\n                            name=\"email\">\n                    </div>\n                    <div class=\"form-group input-group\">\n                        <div class=\"input-group-prepend pre\">\n                            <span class=\"input-class-text\"><i class=\"fa fa-key fa-lg\"></i></span>\n                        </div>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\n                            name=\"password\">\n                    </div>\n                    <div class=\"form-group input-group\">\n                        <div class=\"input-group-prepend pre\">\n                            <span class=\"input-class-text\"><i class=\"fa fa-key fa-lg\"></i></span>\n                        </div>\n                        <input type=\"password\" class=\"form-control\" placeholder=\" Confirm Password\" formControlName=\"cnfpassword\"\n                            name=\"cnfpassword\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-block mb-3 btnd\">Register</button>\n                    <button type=\"button\" class=\"btn btn-block btnd\" (click)=OnClickLogin()>Continue Login</button>\n                </div>\n            </form>\n        </div>\n        <div class=\"col-sm-9 col-lg-4\"></div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}